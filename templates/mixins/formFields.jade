mixin formField(field, item)
	if field.type == 'text'
		+formField_text(field, item)
	else if field.type == 'textarea'
		+formField_textarea(field, item)
	else if field.type == 'key'
		+formField_key(field, item)
	else if field.type == 'email'
		+formField_email(field, item)
	else if field.type == 'url'
		+formField_url(field, item)
	else if field.type == 'password'
		+formField_password(field, item)
	else if field.type == 'html'
		+formField_html(field, item)
	else if field.type == 'markdown'
		+formField_markdown(field, item)
	else if field.type == 'name'
		+formField_name(field, item)
	else if field.type == 'date'
		+formField_date(field, item)
	else if field.type == 'datetime'
		+formField_datetime(field, item)
	else if field.type == 'number'
		+formField_number(field, item)
	else if field.type == 'money'
		+formField_money(field, item)
	else if field.type == 'boolean'
		+formField_boolean(field, item)
	else if field.type == 'select'
		+formField_select(field, item)
	else if field.type == 'cloudinaryimage'
		+formField_cloudinaryimage(field, item)
	else if field.type == 'cloudinaryimages'
		+formField_cloudinaryimages(field, item)
	else if field.type == 'embedly'
		+formField_embedly(field, item)
	else if field.type == 'location'
		+formField_location(field, item)
	else if field.type == 'relationship'
		+formField_relationship(field, item)

//-
//- COMMON
//- ------------------------------
mixin formField_text_common(type, field, value, cls, placeholder, displayValue)
	.field(class='type-' + type, data-field-type=field.type, data-field-path=field.path, data-field-collapse=field.collapse ? 'true' : false, data-field-depends-on=field.dependsOn, data-field-noedit=field.noedit ? 'true' : 'false')
		label.field-label= field.label
		.field-ui(class='width-' + field.width)
			if field.noedit
				.field-value= displayValue || value
			else
				input(type='text', name=field.path, value=value, class=cls, placeholder=placeholder, autocomplete='off').form-control
			if field.note
				.field-note= field.note


//-
//- COMMON (text-style fields)
//- ------------------------------
mixin formField_text(field, item)
	+formField_text_common('text', field, field.format(item))

mixin formField_key(field, item)
	+formField_text_common('key', field, field.format(item), 'code')

mixin formField_email(field, item)
	+formField_text_common('email', field, field.format(item))

mixin formField_url(field, item)
	+formField_text_common('url', field, field.format(item))

mixin formField_date(field, item)
	+formField_text_common('date', field, field.format(item, 'YYYY-MM-DD'), 'ui-datepicker', 'YYYY-MM-DD', field.format(item, 'Do MMM YYYY'))

mixin formField_number(field, item)
	+formField_text_common('number', field, field.format(item))

mixin formField_money(field, item)
	+formField_text_common('money', field, field.format(item))


//-
//- TEXTAREA
//- ------------------------------
mixin formField_textarea(field, item)
	.field.type-textarea(data-field-type=field.type, data-field-path=field.path, data-field-collapse=field.collapse ? 'true' : false, data-field-depends-on=field.dependsOn, data-field-noedit=field.noedit ? 'true' : 'false')
		label.field-label= field.label
		.field-ui(class='width-' + field.width)
			if field.noedit
				.field-value!= utils.textToHTML(item.get(field.path))
			else
				textarea(name=field.path, style='height: #{field.height}px').form-control= item.get(field.path)
			if field.note
				.field-note= field.note


//-
//- DATETIME
//- ------------------------------
mixin formField_datetime(field, item)
	.field(class='type-datetime', data-field-type=field.type, data-field-path=field.path, data-field-collapse=field.collapse ? 'true' : false, data-field-depends-on=field.dependsOn, data-field-noedit=field.noedit ? 'true' : 'false')
		label.field-label= field.label
		.field-ui(class='width-' + field.width)
			if field.noedit
				.field-value= field.format(item, 'Do MMM YYYY, h:mm:ss a')
			else
				.form-row
					.col-sm-6: input(type='text', name=field.paths.date, value=field.format(item, 'YYYY-MM-DD'), placeholder='YYYY-MM-DD', autocomplete='off').form-control.ui-datepicker
					.col-sm-6: input(type='text', name=field.paths.time, value=field.format(item, 'h:mm:ss a'), placeholder='HH:MM:SS am/pm', autocomplete='off').form-control
		if field.note
			.col-sm-9.col-md-10.col-sm-offset-3.col-md-offset-2: .field-note= field.note

//-
//- NAME (split)
//- ------------------------------
mixin formField_name(field, item)
	.field.type-name(data-field-type=field.type, data-field-path=field.path, data-field-collapse=field.collapse ? 'true' : false, data-field-depends-on=field.dependsOn, data-field-noedit=field.noedit ? 'true' : 'false')
		label.field-label= field.label
		.field-ui
			if field.noedit
				- var value = field.format(item)
				if item.get(field.paths.first) || item.get(field.paths.last)
					.field-value= item.get(field.paths.first)
					.field-value= item.get(field.paths.last)
				else
					.field-value
			else
				.form-row
					.col-sm-6: input(type='text', name=field.paths.first, autocomplete='off', placeholder='first name', value=item.get(field.paths.first)).form-control
					.col-sm-6: input(type='text', name=field.paths.last, autocomplete='off', placeholder='last name', value=item.get(field.paths.last)).form-control
		if field.note
			.col-sm-9.col-md-10.col-sm-offset-3.col-md-offset-2: .field-note= field.note

//-
//- PASSWORD
//- ------------------------------
mixin formField_password(field, item)
	.field.type-password(data-field-type=field.type, data-field-path=field.path, data-field-collapse=field.collapse ? 'true' : false, data-field-depends-on=field.dependsOn, data-field-noedit=field.noedit ? 'true' : 'false', data-field-value=item.get(field.path) ? "true" : "false")
		label.field-label= field.label
		.field-ui
			if field.noedit
				.field-value= (item.get(field.path)) ? "password set" : "password not set"
			else
				.leave-password
					a(href=js).btn.btn-default.btn-change-password= (item.get(field.path)) ? "Change Password" : "Set Password"
				.change-password
					.form-row
						.col-sm-6: input(type='password', name=field.path, autocomplete='off', placeholder='New password').form-control
						.col-sm-6: input(type='password', name=field.paths.confirm, autocomplete='off', placeholder='Confirm new password').form-control
					.form-control-wrapper: a(href=js).btn.btn-default.btn-cancel.btn-leave-password Cancel
		if field.note
			.col-sm-9.col-md-10.col-sm-offset-3.col-md-offset-2: .field-note= field.note

//-
//- HTML
//- ------------------------------
mixin formField_html(field, item)
	.field.type-html(data-field-type=field.type, data-field-path=field.path, data-field-collapse=field.collapse ? 'true' : false, data-field-depends-on=field.dependsOn, data-field-noedit=field.noedit ? 'true' : 'false')
		label.field-label= field.label
		.field-ui(class='width-' + field.width)
			if field.noedit
				.field-value= item.get(field.path)
			else
				textarea(name=field.path, class=field.wysiwyg ? 'wysiwyg' : 'code', style='height: #{field.height}px')= item.get(field.path)
		if field.note
			.col-sm-9.col-md-10.col-sm-offset-3.col-md-offset-2: .field-note= field.note


//-
//- MARKDOWN
//- ------------------------------
mixin formField_markdown(field, item)
	.field.type-markdown(data-field-type=field.type, data-field-path=field.path, data-field-collapse=field.collapse ? 'true' : false, data-field-depends-on=field.dependsOn, data-field-noedit=field.noedit ? 'true' : 'false')
		label.field-label= field.label
		.field-ui(class='width-' + field.width)
			if field.noedit
				.field-value!= item.get(field.paths.html)
			else
				textarea(name=field.path, style='height: #{field.height}px').form-control.code= item.get(field.paths.md)
			if field.note
				.field-note= field.note

//-
//- BOOLEAN
//- ------------------------------
mixin formField_boolean(field, item)
	.field.type-boolean(data-field-type=field.type, data-field-path=field.path, data-field-depends-on=field.dependsOn, data-field-noedit=field.noedit ? 'true' : 'false', data-field-value=item.get(field.path) ? 'true' : 'false')
		.field-ui(class=field.indent ? 'field-indented' : false)
			if field.noedit
				if item.get(field.path)
					img(src='/keystone/images/icons/16/checkbox-checked.png', width=16, height=16).checked
				else
					img(src='/keystone/images/icons/16/checkbox-unchecked.png', width=16, height=16).unchecked
				span= field.label
			else
				label(for=field.path).checkbox
					input(type='checkbox', name=field.path, id=field.path, value='true', checked=item.get(field.path))
					=' ' + field.label
			if field.note
				.field-note &mdash; #{field.note}

//-
//- SELECT
//- ------------------------------
mixin formField_select(field, item)
	.field.type-select(data-field-type=field.type, data-field-path=field.path, data-field-collapse=field.collapse ? 'true' : false, data-field-depends-on=field.dependsOn, data-field-noedit=field.noedit ? 'true' : 'false', data-field-value=item.get(field.path))
		label.field-label= field.label
		.field-ui
			if field.noedit
				if item.get(field.path)
					.field-value= field.format(item)
				else
					.help-block (not set)
			else
				select(name=field.path).ui-select2
					option(value='')
					each opt in field.ops
						option(value=opt.value, selected=(opt.value == item.get(field.path)))= opt.label
			if field.note
				.field-note= field.note

//-
//- CLOUDINARY IMAGE
//- ------------------------------
mixin formField_cloudinaryimage(field, item)
	- var hasImage = item.get(field.paths.exists)
	.field.type-cloudinaryimage(data-field-type=field.type, data-field-path=field.path, data-field-collapse=field.collapse ? 'true' : false, data-field-depends-on=field.dependsOn, data-field-noedit=field.noedit ? 'true' : 'false', data-field-value=hasImage ? 'true' : 'false')
		label.field-label= field.label
		input(type='file', name=field.paths.upload).field-upload
		input(type='hidden', name=field.paths.action, value='').field-action
		.field-ui(class=hasImage ? 'has-image' : false)
			if field.noedit
				if hasImage
					.image-preview
						a(href=item.get(field.paths.url), rel=field.path).img-thumbnail
							img(width=90, height=90, data-src=field.apply(item, 'fit', false, 90), data-id=item.get(field.paths.public_id), data-wysiwyg=(field.options.wysiwyg ? 'true' : false), data-wysiwyg-options=(field.options.wysiwyg ? '#{JSON.stringify(field.options.wysiwyg)}' : false), data-wysiwyg-original=(field.options.wysiwyg ? item.get(field.paths.url) : false), data-wysiwyg-src=(field.options.wysiwyg ? ( 'object' == typeof field.options.wysiwyg ? field.apply(item, field.options.wysiwyg.crop, field.options.wysiwyg.width, field.options.wysiwyg.height) : item.get(field.paths.url) ) : false)).img-load
							.glyphicon.glyphicon-picture.img-loading
					.image-details
						.field-value= item.get(field.paths.url)
						.field-value= item.get(field.paths.width) + ' x ' + item.get(field.paths.height)
				else
					.help-block (no image)
			else
				.image-container
					if hasImage
						.image-preview.current
							a(href=item.get(field.paths.url), rel=field.path).img-thumbnail
								img(width=90, height=90, data-src=field.apply(item, 'fit', false, 90), data-id=item.get(field.paths.public_id), data-wysiwyg=(field.options.wysiwyg ? 'true' : false), data-wysiwyg-options=(field.options.wysiwyg ? '#{JSON.stringify(field.options.wysiwyg)}' : false), data-wysiwyg-original=(field.options.wysiwyg ? item.get(field.paths.url) : false), data-wysiwyg-src=(field.options.wysiwyg ? ( 'object' == typeof field.options.wysiwyg ? field.apply(item, field.options.wysiwyg.crop, field.options.wysiwyg.width, field.options.wysiwyg.height) : item.get(field.paths.url) ) : false)).img-load
								.glyphicon.glyphicon-picture.img-loading
								.glyphicon.delete-pending(style='display: none;')
					.image-details
						if hasImage
							.image-values
								.field-value= item.get(field.paths.url)
								.field-value= item.get(field.paths.width) + ' x ' + item.get(field.paths.height)
						.upload-queued.pull-left
							.alert.alert-success Image selected - save to upload
						.delete-queued.pull-left
							.alert.alert-danger
				.image-toolbar
					div.pull-left
						a(href=js).btn.btn-default.btn-upload-image= ( hasImage ? 'Change' : 'Upload' ) + ' Image'
						a(href=js, data-alt-text='Delete Image', style=( hasImage ? '' : 'display: none;')).btn.btn-link.btn-cancel.btn-delete-image Remove Image
						a(href=js, data-alt-text='Cancel Upload', style='display: none;').btn.btn-link.btn-cancel.btn-cancel-image Cancel Upload
						a(href=js, style='display: none;').btn.btn-link.btn-cancel.btn-undo-image Undo Remove
			if field.note
				.field-note= field.note

//-
//- CLOUDINARY IMAGES
//- ------------------------------
mixin formField_cloudinaryimages(field, item)
	- var hasImages = item.get(field.path).length
	.field.type-cloudinaryimages(data-field-type=field.type, data-field-path=field.path, data-field-paths-upload=field.paths.upload, data-field-paths-uploads=field.paths.uploads, data-field-collapse=field.collapse ? 'true' : false, data-field-depends-on=field.dependsOn, data-field-noedit=field.noedit ? 'true' : 'false', data-field-value=hasImages ? 'true' : 'false')
		label.field-label= field.label
		input(type='hidden', name=field.paths.action, value='').field-action
		input(type='hidden', name=field.paths.order, value='').field-order
		input(type='hidden', name=field.paths.uploads, value='').field-uploads
		input(type='file', name='file', multiple, data-form-data='#{JSON.stringify(cloudinary)}').field-upload
		.field-ui(class=hasImages ? 'has-image' : false)
			if field.noedit
				each value in item.get(field.path)
					.image-field.row.col-sm-3.col-md-12(title=value.width + ' x ' + value.height)
						.image-preview
							a(href=value.url, rel=field.path).img-thumbnail
								img(width=90, height=90, data-src=value.fit(false, 90), data-id=value.public_id, data-wysiwyg=(field.options.wysiwyg ? 'true' : false), data-wysiwyg-options=(field.options.wysiwyg ? '#{JSON.stringify(field.options.wysiwyg)}' : false), data-wysiwyg-original=(field.options.wysiwyg ? value.url : false), data-wysiwyg-src=(field.options.wysiwyg ? ( 'object' == typeof field.options.wysiwyg ? value[field.options.wysiwyg.crop](field.options.wysiwyg.width, field.options.wysiwyg.height) : value.src() ) : false)).img-load
								.glyphicon.glyphicon-picture.img-loading
			else
				.images-container.clearfix
					each value in item.get(field.path)
						.image-field.image-sortable.row.col-sm-3.col-md-12(data-id=value.public_id, title=value.width + ' x ' + value.height)
							.image-preview
								a(href=value.url, rel=field.path).img-thumbnail
									img(width=90, height=90, data-src=value.fit(false, 90), data-id=value.public_id, data-wysiwyg=(field.options.wysiwyg ? 'true' : false), data-wysiwyg-options=(field.options.wysiwyg ? '#{JSON.stringify(field.options.wysiwyg)}' : false), data-wysiwyg-original=(field.options.wysiwyg ? value.url : false), data-wysiwyg-src=(field.options.wysiwyg ? ( 'object' == typeof field.options.wysiwyg ? value[field.options.wysiwyg.crop](field.options.wysiwyg.width, field.options.wysiwyg.height) : value.src() ) : false)).img-load
									.glyphicon.glyphicon-picture.img-loading
									.glyphicon.delete-pending(style='display: none;')
							.image-details
								a(href=js, data-alt-text='Delete').btn.btn-link.btn-cancel.btn-remove-image Remove
								a(href=js, data-alt-text='Undo', style='display: none;').btn.btn-link.btn-cancel.btn-undo-remove Undo
					.image-field.image-upload.row.col-sm-3.col-md-12
						.image-preview
							span.img-thumbnail
								span.img-dropzone
								.glyphicon.glyphicon-picture.img-uploading
						.image-details
							span.image-message Drag to upload
				
				.images-toolbar.row.col-sm-3.col-md-12
					div.pull-left
						a(href=js).btn.btn-default.btn-upload Upload Images
					.upload-queued.pull-left
						.alert.alert-success
					.delete-queued.pull-left
						.alert.alert-danger
				if field.note
					.field-note= field.note

//-
//- NAME (split)
//- ------------------------------
mixin formField_embedly(field, item)
	.field.type-embedly(data-field-type=field.type, data-field-path=field.path, data-field-collapse=field.collapse ? 'true' : false, data-field-depends-on=field.dependsOn, data-field-noedit=field.noedit ? 'true' : 'false')
		label.field-label= field.label
		.field-ui
			if item.get(field.paths.exists)
				.field-value= item.get(field.paths.providerName) + ' ' + utils.upcase(item.get(field.paths.type))
				.field-value= item.get(field.paths.url)
			else
				.field-value (not set)
		if field.note
			.col-sm-9.col-md-10.col-sm-offset-3.col-md-offset-2: .field-note= field.note

//-
//- LOCATION
//- ------------------------------
mixin formField_location(field, item)
	.field.type-location(data-field-type=field.type, data-field-path=field.path, data-field-collapse=field.collapse ? 'true' : false, data-field-depends-on=field.dependsOn, data-field-noedit=field.noedit ? 'true' : 'false')
		if field.noedit
			label.field-label= field.label
			.field-ui.noedit: .field-value= field.format(item)
		else
			.field-ui
				label= field.label
					a(href=js).field-label-companion.btn-show-extras (show more fields)
				.row.extras
					.col-sm-3.col-md-2: label.text-muted PO Box / Shop
					.col-sm-3.col-md-2: input(type='text', name=field.paths.number, value=item.get(field.paths.number)).form-control
				.row.extras
					.col-sm-3.col-md-2: label.text-muted Building Name
					.col-sm-9.col-md-5: input(type='text', name=field.paths.name, value=item.get(field.paths.name)).form-control
				.row
					.col-sm-3.col-md-2: label.text-muted Street Address
					.col-sm-9.col-md-5: input(type='text', name=field.paths.street1, value=item.get(field.paths.street1)).form-control
				.row.extras
					.col-sm-3.col-md-2: label.text-muted Street Address 2
					.col-sm-9.col-md-5: input(type='text', name=field.paths.street2, value=item.get(field.paths.street2)).form-control
				.row
					.col-sm-3.col-md-2: label.text-muted Suburb
					.col-sm-9.col-md-5: input(type='text', name=field.paths.suburb, value=item.get(field.paths.suburb)).form-control
				.row
					.col-sm-3.col-md-2: label.text-muted State
					.col-sm-3.col-md-2: input(type='text', name=field.paths.state, value=item.get(field.paths.state)).form-control
					.col-sm-2.col-md-1.field-postcode: label.text-muted Postcode
					.col-sm-3.col-md-2: input(type='text', name=field.paths.postcode, value=item.get(field.paths.postcode)).form-control
				.row
					.col-sm-3.col-md-2: label.text-muted Country
					.col-sm-9.col-md-5: input(type='text', name=field.paths.country, value=item.get(field.paths.country)).form-control
				.row
					.col-sm-3.col-md-2: label.text-muted Map
					.col-sm-9.col-md-5: div(id=field.paths.geo+"_map_canvas" class="map_canvas")
				.row.extras
					.col-sm-3.col-md-2: label.text-muted Lng/Lat
					.col-sm-9.col-md-5: .form-row
						.col-sm-6: input(type='text', name=field.paths.geo, value=item.get(field.path + '.geo') ? item.get(field.path + '.geo')[0] : '', placeholder='Longitude').form-control
						.col-sm-6: input(type='text', name=field.paths.geo, value=item.get(field.path + '.geo') ? item.get(field.path + '.geo')[1] : '', placeholder='Latitude').form-control

				if field.enableMapsAPI
					.row: .col-sm-9.col-md-10.col-sm-offset-3.col-md-offset-2.improve-options
						label(for=field.paths.improve, title='When checked, this will attempt to fill missing fields. It will also get the lat/long').checkbox.autoimprove
							input(type='checkbox', name=field.paths.improve, id=field.paths.improve, value='true')
							|  Autodetect and improve location on save
						label(for=field.paths.overwrite).checkbox.overwrite
							input(type='checkbox', name=field.paths.overwrite, id=field.paths.overwrite, value='true')
							|  Replace existing data
		
		if field.note
			.field-note= field.note

//-
//- RELATIONSHIP
//- ------------------------------
mixin formField_relationship(field, item)
	if !field.isValid
		.alert.alert-danger Warning: Relationship field <strong>#{field.path}</strong> refers to an invalid list: <strong>#{field.options.ref}</strong>
	else
		- var refList = field.refList
		.field.type-relationship(data-field-type=field.type, data-field-path=field.path, data-field-collapse=field.collapse ? 'true' : false, data-field-depends-on=field.dependsOn, data-field-noedit=field.noedit ? 'true' : 'false', data-field-value=item.get(field.path))
			label.field-label= field.label
			.field-ui
				.field-message
				if field.noedit
					if !field.many && item.get(field.path)
						a(href='/keystone/' + refList.path + '/' + item.get(field.path), data-ref-path=refList.path).ui-related-item= item.get(field.path)
					else if field.many && item.get(field.path).length
						each value in item.get(field.path)
							a(href='/keystone/' + refList.path + '/' + value, data-ref-path=refList.path).ui-related-item= value
					else
						.help-block (not set)
				else
					input(type='hidden',
						name=field.path,
						id='field_' + field.path,
						value=field.many ? item.get(field.path).join(',') : item.get(field.path),
						data-ref-many=field.many ? 'true' : null,
						data-ref-filters=field.filters,
						data-ref-path=refList.path,
						data-ref-singular=refList.singular,
						data-ref-plural=refList.plural).ui-select2-ref
					if !field.many && item.get(field.path)
						a(href='/keystone/' + refList.path + '/' + item.get(field.path), style='margin-left: 10px;').btn.btn-link.btn-goto-linked-item view #{refList.singular.toLowerCase()}
				if field.note
					.field-note= field.note

